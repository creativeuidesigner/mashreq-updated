const response =
  "Certainly! Below is the required format for creating a chart using the Chart.js library, based on the financial highlights from the annual report. The data is structured for easy plotting.\n\n```javascript\nconst labels = ['2019', '2020', '2021', '2022', '2023'];\n\nconst data = {\n    labels: labels,\n    datasets: [\n        {\n            label: 'Loans and Advances to Customers (AED Billion)',\n            data: [76.2, 71.5, 81.5, 90.3, 110.4],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\n        },\n        {\n            label: 'Customer Deposits (AED Billion)',\n            data: [91.0, 88.3, 101.5, 113.8, 146.2],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)'\n        },\n        {\n            label: 'Net Profit/Loss (AED Million)',\n            data: [2065, 1278, 1002, 3729, 8589],\n            backgroundColor: 'rgba(255, 206, 86, 0.2)'\n        },\n        {\n            label: 'Operating Income (AED Million)',\n            data: [5994, 5148, 5806, 7307, 10803],\n            backgroundColor: 'rgba(153, 102, 255, 0.2)'\n        },\n        {\n            label: 'Total Equity (AED Billion)',\n            data: [22.2, 20.2, 21.0, 24.5, 31.3],\n            backgroundColor: 'rgba(255, 159, 64, 0.2)'\n        },\n        {\n            label: 'Return on Assets (%)',\n            data: [1.5, 0.9, 0.7, 2.1, 4.1],\n            backgroundColor: 'rgba(255, 99, 132, 0.2)'\n        },\n        {\n            label: 'Return on Equity (%)',\n            data: [9.9, 6.2, 5.2, 17.7, 34.3],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\n        },\n        {\n            label: 'Cost to Income Ratio (%)',\n            data: [43.8, 57.2, 45.2, 39.2, 30.9],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)'\n        },\n        {\n            label: 'Capital Adequacy Ratio (%)',\n            data: [16.3, 16.0, 14.5, 16.0, 16.5],\n            backgroundColor: 'rgba(255, 206, 86, 0.2)'\n        },\n        {\n            label: 'NPL to Gross Loans (%)',\n            data: [3.6, 5.1, 5.2, 2.2, 1.3],\n            backgroundColor: 'rgba(153, 102, 255, 0.2)'\n        }\n    ]\n};\n```\n\nYou can use the above `data` object directly in the Chart.js library to create your chart.\n\nHere is a basic example of how to integrate this with Chart.js:\n\n```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Chart.js Example</title>\n    <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n</head>\n<body>\n    <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n    <script>\n        const labels = ['2019', '2020', '2021', '2022', '2023'];\n\n        const data = {\n            labels: labels,\n            datasets: [\n                {\n                    label: 'Loans and Advances to Customers (AED Billion)',\n                    data: [76.2, 71.5, 81.5, 90.3, 110.4],\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)'\n                },\n                {\n                    label: 'Customer Deposits (AED Billion)',\n                    data: [91.0, 88.3, 101.5, 113.8, 146.2],\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)'\n                },\n                {\n                    label: 'Net Profit/Loss (AED Million)',\n                    data: [2065, 1278, 1002, 3729, 8589],\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)'\n                },\n                {\n                    label: 'Operating Income (AED Million)',\n                    data: [5994, 5148, 5806, 7307, 10803],\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)'\n                },\n                {\n                    label: 'Total Equity (AED Billion)',\n                    data: [22.2, 20.2, 21.0, 24.5, 31.3],\n                    backgroundColor: 'rgba(255, 159, 64, 0.2)'\n                },\n                {\n                    label: 'Return on Assets (%)',\n                    data: [1.5, 0.9, 0.7, 2.1, 4.1],\n                    backgroundColor: 'rgba(255, 99, 132, 0.2)'\n                },\n                {\n                    label: 'Return on Equity (%)',\n                    data: [9.9, 6.2, 5.2, 17.7, 34.3],\n                    backgroundColor: 'rgba(75, 192, 192, 0.2)'\n                },\n                {\n                    label: 'Cost to Income Ratio (%)',\n                    data: [43.8, 57.2, 45.2, 39.2, 30.9],\n                    backgroundColor: 'rgba(54, 162, 235, 0.2)'\n                },\n                {\n                    label: 'Capital Adequacy Ratio (%)',\n                    data: [16.3, 16.0, 14.5, 16.0, 16.5],\n                    backgroundColor: 'rgba(255, 206, 86, 0.2)'\n                },\n                {\n                    label: 'NPL to Gross Loans (%)',\n                    data: [3.6, 5.1, 5.2, 2.2, 1.3],\n                    backgroundColor: 'rgba(153, 102, 255, 0.2)'\n                }\n            ]\n        };\n\n        const config = {\n            type: 'bar',\n            data: data,\n            options: {}\n        };\n\n        var myChart = new Chart(\n            document.getElementById('myChart'),\n            config\n        );\n    </script>\n</body>\n</html>\n```\n\nThis will generate a bar chart with the given data points. Adjust the `backgroundColor` values as needed to differentiate the datasets better.;";

const response2 =
  "Sure, here is the chart data in the format required for Chart.js:\n\n```javascript\nconst labels = ['2020', '2021'];\n\nconst data = {\n    labels: labels,\n    datasets: [\n        {\n            label: 'Total Energy Consumption (GJ)',\n            data: [57686, 71760.22],\n            backgroundColor: 'rgba(255, 99, 132, 0.2)'\n        },\n        {\n            label: 'Energy Intensity (GJ/m²)',\n            data: [1.88, 2.35],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)'\n        },\n        {\n            label: 'Direct Scope 1 Emissions (tCO₂e)',\n            data: [16.15, 40.89],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\n        },\n        {\n            label: 'Indirect Scope 2 Emissions (tCO₂e)',\n            data: [7732.18, 13904],\n            backgroundColor: 'rgba(153, 102, 255, 0.2)'\n        },\n        {\n            label: 'GHG Emissions Intensity (Scope 1 & 2) (tCO₂e/m²)',\n            data: [0.25, 0.45],\n            backgroundColor: 'rgba(255, 159, 64, 0.2)'\n        },\n        {\n            label: 'Total Water Consumption (litres)',\n            data: [29294000, 31975750],\n            backgroundColor: 'rgba(255, 206, 86, 0.2)'\n        },\n        {\n            label: 'Total Waste Produced (kg)',\n            data: [244123, 547366],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)'\n        }\n    ]\n};\n```\n\nYou can use this data object to plot the chart directly using Chart.js.";

const response3 =
  'Here\'s the data structured in a format suitable for plotting directly using the Chart.js library:\n\n```javascript\nvar chartData = {\n    labels: ["2019", "2020", "2021", "2022", "2023"],\n    datasets: [\n        {\n            label: "Loans and Advances to Customers (AED Billion)",\n            data: [76.2, 71.5, 81.5, 90.3, 110.4],\n            backgroundColor: "rgba(75, 192, 192, 0.2)"\n        },\n        {\n            label: "Loans and Advances to Banks (AED Billion)",\n            data: [26.6, 28.2, 28.8, 29.0, 39.1],\n            backgroundColor: "rgba(54, 162, 235, 0.2)"\n        },\n        {\n            label: "Customer Deposits (AED Billion)",\n            data: [91.0, 88.3, 101.5, 113.8, 146.2],\n            backgroundColor: "rgba(255, 206, 86, 0.2)"\n        },\n        {\n            label: "Net Profit/Loss (AED Million)",\n            data: [2065, 1278, 1002, 3729, 8589],\n            backgroundColor: "rgba(255, 99, 132, 0.2)"\n        },\n        {\n            label: "Earnings/Loss per Share (AED)",\n            data: [11.6, 7.1, 5.6, 18.6, 42.8],\n            backgroundColor: "rgba(153, 102, 255, 0.2)"\n        },\n        {\n            label: "Operating Income (AED Million)",\n            data: [5994, 5148, 5806, 7307, 10803],\n            backgroundColor: "rgba(255, 159, 64, 0.2)"\n        },\n        {\n            label: "Total Equity (AED Billion)",\n            data: [22.2, 20.2, 21.0, 24.5, 31.3],\n            backgroundColor: "rgba(75, 192, 192, 0.2)"\n        },\n        {\n            label: "Return on Assets",\n            data: [1.5, 0.9, 0.7, 2.1, 4.1],\n            backgroundColor: "rgba(54, 162, 235, 0.2)"\n        },\n        {\n            label: "Return on Equity",\n            data: [9.9, 6.2, 5.2, 17.7, 34.3],\n            backgroundColor: "rgba(255, 206, 86, 0.2)"\n        },\n        {\n            label: "Tier 1 Ratio",\n            data: [15.2, 14.9, 13.4, 13.7, 14.3],\n            backgroundColor: "rgba(255, 99, 132, 0.2)"\n        },\n        {\n            label: "Capital Adequacy Ratio",\n            data: [16.3, 16.0, 14.5, 16.0, 16.5],\n            backgroundColor: "rgba(153, 102, 255, 0.2)"\n        },\n        {\n            label: "Cost to Income Ratio",\n            data: [43.8, 57.2, 45.2, 39.2, 30.9],\n            backgroundColor: "rgba(255, 159, 64, 0.2)"\n        },\n        {\n            label: "NPL to Gross Loans",\n            data: [3.6, 5.1, 5.2, 2.2, 1.3],\n            backgroundColor: "rgba(75, 192, 192, 0.2)"\n        },\n        {\n            label: "NPL Coverage",\n            data: [116.8, 130.0, 128.2, 190.8, 247.4],\n            backgroundColor: "rgba(54, 162, 235, 0.2)"\n        },\n        {\n            label: "Liquid Assets to Total Assets",\n            data: [29.8, 30.8, 29.0, 33.2, 33.6],\n            backgroundColor: "rgba(255, 206, 86, 0.2)"\n        }\n    ]\n};\n```\n\nThis data can be used with the Chart.js library to create various types of charts by simply plugging it into the dataset configuration.';

const response4 =
  "Certainly! Here is a structured format for the annual report data that can be directly added to a Chart.js chart:\n\n```javascript\nconst data = {\n    labels: [\"Jun 22\", \"Sep 22\", \"Dec 22\", \"Mar 23\", \"Jun 23\"],\n    datasets: [\n        {\n            label: \"Loans (AED mn)\",\n            data: [903, 3198, 9495, 6512, 7061],\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 1\n        },\n        {\n            label: \"Operating Income (AED mn)\",\n            data: [1332, 1409, 1478, 1516, 1600],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n        },\n        {\n            label: \"Deposits (AED mn)\",\n            data: [4215, 4200, 4250, 4400, 4500],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n        },\n        {\n            label: \"Net Profit (AED mn)\",\n            data: [1033, 1090, 1120, 1180, 1230],\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n        },\n        {\n            label: \"Coverage Ratio (RHS)\",\n            data: [90.3, 95.6, 97.2, 98.1, 100.0],\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1\n        },\n        {\n            label: \"NPL Ratio (LHS)\",\n            data: [1.4, 1.3, 1.2, 1.1, 1.0],\n            backgroundColor: 'rgba(255, 206, 86, 0.2)',\n            borderColor: 'rgba(255, 206, 86, 1)',\n            borderWidth: 1\n        },\n        {\n            label: \"Capital Adequacy Ratio\",\n            data: [13.7, 13.9, 14.1, 14.5, 14.8],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n        },\n        {\n            label: \"Tier 1 Ratio\",\n            data: [12.7, 13.0, 13.2, 13.5, 13.8],\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n        }\n    ]\n};\n```\n\nThis JSON structure can be directly used in Chart.js to create a chart with multiple datasets representing the various metrics from the annual report. The `labels` array contains the time periods, while each dataset object within the `datasets` array corresponds to a specific metric, including its data points and styling options.";

const response5 =
  "Based on the provided context, I will create a chart for an annual report using the format suitable for Chart.js.\n\n```javascript\nconst data = {\n    labels: ['Jun 2022', 'Sep 2022', 'Dec 2022', 'Mar 2023', 'Jun 2023'],\n    datasets: [\n        {\n            label: 'Loans (AED mn)',\n            data: [2150, 4200, 6250, 8050, 10000],\n            backgroundColor: 'rgba(75, 192, 192, 0.2)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1\n        },\n        {\n            label: 'Operating Income (AED mn)',\n            data: [90, 3033, 198, 409, 126],\n            backgroundColor: 'rgba(153, 102, 255, 0.2)',\n            borderColor: 'rgba(153, 102, 255, 1)',\n            borderWidth: 1\n        },\n        {\n            label: 'Deposits (AED mn)',\n            data: [318, 1695, 633, 1061, 212],\n            backgroundColor: 'rgba(255, 159, 64, 0.2)',\n            borderColor: 'rgba(255, 159, 64, 1)',\n            borderWidth: 1\n        },\n        {\n            label: 'Net Profit (AED mn)',\n            data: [13, 71, 415, 118, 15],\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            borderColor: 'rgba(54, 162, 235, 1)',\n            borderWidth: 1\n        }\n    ]\n};\n```\n\nThis object can be directly used in Chart.js to render a chart with labels and data sets representing different financial metrics over time.";

const response7 = "```javascript\nconst data = {\n  labels: [\"Migros\", \"Système U\", \"Coop Group\", \"Dollar Tree\", \"Ceconomy\", \"Morrisons\", \"Jerónimo Martins\", \"Metro AG\", \"Magnit\", \"Macy's\", \"Empire\", \"H&M\", \"Reliance Retail\", \"A.S. Watson Group\", \"Wesfarmers\", \"Meijer\", \"Fast Retailing\", \"Suning\", \"Nike\", \"E-Mart\"],\n  datasets: [\n    {\n      label: \"FY2021 Retail Revenue (US$ M)\",\n      data: [28322, 27949, 27559, 26321, 25527, 24793, 24697, 24620, 24520, 24460, 24034, 23343, 22823, 22334, 22087, 21000, 19884, 19834, 19657, 19373]\n    },\n    {\n      label: \"FY2021 Parent Company Group Revenue (US$ M)\",\n      data: [31643, 33813, 34858, 26321, 25527, 24793, 24697, 29595, 25176, 24460, 24177, 23343, 22826, 22334, 26712, 22000, 19908, 21523, 46710, 21761]\n    },\n    {\n      label: \"FY2020-2021 Retail Revenue Growth (%)\",\n      data: [3.1, 4.0, 4.7, 3.2, 5.1, 0.8, 3.2, 0.0, 2.6, 0.5, 2.7, 5.5, 2.9, 8.8, 6.4, 0.0, 2.8, 31.8, null, 6.4]\n    },\n    {\n      label: \"Net Profit Margin (%)\",\n      data: [3.2, null, 2.2, 5.0, 1.2, 0.8, 3.2, 0.2, 2.6, 5.8, 2.7, 5.5, 2.9, null, 6.4, null, 2.8, null, null, 4.4]\n    }\n  ]\n};\n```"

const response6 = "const data = {\n    labels: [\n        \"Migros Genossenschafts Bund\",\n        \"Système U Centrale Nationale\",\n        \"Coop Group\",\n        \"Dollar Tree Inc\",\n        \"Ceconomy AG\",\n        \"WM Morrison Supermarkets PLC\",\n        \"Jerónimo Martins SGPS S.A.\",\n        \"Metro AG\",\n        \"PJSC Magnit\",\n        \"Macy's Inc\",\n        \"Empire Company Limited\",\n        \"H&M Hennes & Mauritz AB\",\n        \"Reliance Retail Limited\",\n        \"A.S. Watson Group\",\n        \"Wesfarmers Limited\",\n        \"Meijer Inc\",\n        \"Fast Retailing Co Ltd\",\n        \"Suning.com Co Ltd\",\n        \"Nike Inc Nike Direct\",\n        \"E-Mart Inc\",\n        \"Ross Stores Inc\",\n        \"Kohl's Corporation\",\n        \"Kingfisher PLC\",\n        \"Conad Consorzio Nazionale Dettaglianti Soc Coop a R.L.\",\n        \"CP ALL PLC\",\n        \"Rite Aid Corporation\",\n        \"Vipshop Holdings Limited\",\n        \"Compagnie Financière Richemont SA\",\n        \"Kering SA\"\n    ],\n    datasets: [\n        {\n            label: 'FY2021 Retail Revenue (US $M)',\n            data: [\n                28322, \n                27949, \n                27559, \n                26321, \n                25527, \n                24793, \n                24697, \n                24620, \n                24520, \n                24460, \n                24034, \n                23343, \n                22823, \n                22334, \n                22087, \n                21000, \n                19884, \n                19834, \n                19657, \n                19373, \n                18916, \n                18471, \n                18117, \n                18089, \n                17637, \n                17495, \n                17459, \n                17005, \n                16898\n            ]\n        },\n        {\n            label: 'FY2021 Parent Company Group Revenue (US $M)',\n            data: [\n                31643, \n                33813, \n                34858, \n                26321, \n                25527, \n                24793, \n                24697, \n                29595, \n                25176, \n                24460, \n                24177, \n                23343, \n                22826, \n                22334, \n                26712, \n                22000, \n                19908, \n                21523, \n                46710, \n                21761, \n                18916, \n                19433, \n                18117, \n                20099, \n                18335, \n                24568, \n                18369, \n                22276, \n                20861\n            ]\n        }\n    ]\n}"

// const extractLables = (response) => {
//   const regex = /const\s+data\s*=\s*(\[[^\]]*\])/;
//   const match = response.match(regex);
//   let arrayString = match[1];
//   arrayString = arrayString.replace(/'/g, '"');
//   const array = JSON.parse(arrayString);
//   console.log("lables", array);
// };

const extractData = (response) => {
  const regex = /const\s+data\s*=\s*({[\s\S]*?});/;
  const match = response.match(regex);

  const matchedStr = match[0];

  const str1 = matchedStr.replace(/\n/g, "");
  const str2 = str1.replace(/\s+/g, "");
  const finalStr = str2.replace("constdata=", "");
  const str5 = finalStr.replace(";", "");
  let correctedString = addQuotes(str5);
  correctedString = correctedString.replace(/'s/g, '');
  correctedString = correctedString.replace(/'/g, '"');
  console.log("correctedString", correctedString);

  return str5;

  return;

  const str3 = finalStr.replace(":labels", "");
  const str4 = str3.replace("labels,", "");
};

function addQuotes(jsonString) {
  // Add double quotes around keys
  // Add double quotes around keys
  jsonString = jsonString.replace(
    /([{,]\s*)([a-zA-Z0-9_]+)(\s*:)/g,
    '$1"$2"$3'
  );

  // Add double quotes around string values that are not part of an array
  jsonString = jsonString.replace(/:\s*'([^']*)'/g, ': "$1"');

  return jsonString;
}

// extractLables(response3);

extractData(response6);
